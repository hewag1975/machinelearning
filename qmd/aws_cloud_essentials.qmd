---
title: "cloud practitioner essentials"
format: html
---


## M1: Introduction to AWS

AWS concepts:

* basic client-server model
* client (browser, desktop app): send requests 
* server: validates request and returns answer
* pay for what you need
* 

Cloud computing:

* opposed to on-premise, hybrid
* on-demand resources
* over the internet 
* pay-as-you-go pricing


## M2: Amazon Elastic Compute Cloud

* highly flexible, cost-effective, quick
* multitenancy: sharing underlying hardware between virtual machines
* hypervisor is taking the role of allocating resources
* vertical scaling: up- and down-scaling instances
* compute-as-a-service
* instance types are grouped by family: general purpose, compute optimized, 
memory optimized, accelerated computing, storage optimized 
* pricing: on-demand, savings plan, reserved instances, spot instance, 
dedicated hosts
* scalability, i.e. automatically respond to changes in demand (scale up, 
scale out, scale in), service is called EC2 Auto Scaling, dynamic scaling, 
predictive scaling
* elasticity, elastic load balancing takes requests and routes them to a free 
instance
* messaging ad queuing, services AWS SQS 
(simple queue service) and AWS SNS (simple notification service)
* monolithic application (tight coupling, failure of one application component 
will cause others to fail) versus microservices (loosely coupled architecture, 
single failure will not crash other applications)

Additional compute services:

* serverless compute: underlying instance is not accessible, i.e. the entire 
ressource management is done by AWS
* AWS lambda: upload code to lambda function, code has to run under 15 mins, 
no instance maintenance work
* AWS elastic container service ECS (on top of EC2)
* AWS elastic kubernetes service EKS (on top of EC2)
* AWS fargate: serverless compute platform for running ECS or EKS
* scenarios:
  * traditional applications, access to OS: EC2
  * short running function, event-driven or service oriented: Lambda
  * container based applications: ECS or EKS on top of either EC2 or Fargate


## M3: Global infrastructure

* fault tolerance, high availability
* regions: data centers in large groups
* multiple data centers per region
* regions are connected by high speed fiber network
* data does not leave region unless explicitly requested
* decision for a specific region:
  * compliance and regulatory needs
  * proximity
  * feature availability
  * pricing

* setup per region:
  * availability zone (AZ): one or more discrete data center
  * fault tolerant apps need to run on multiple instances in different AZ
  * some services are set up per region (e.g. ELB, SQS, SNS)

* edge location: a site where Amazon CloudFront is used to cache copies of 
content closer to customer locations
* outposts: mini region set up by AWS in an own data center

Provisioning of AWS resources:

* AWS Management console
* AWS CLI
* AWS SDKs (interaction through programming languages)
* AWS Elastic Beanstalk: build environments through configuration scripts
* AWS CloudFormation: infrastructure as code (YML, JSON)


## M4: Networking

* AWS VPC: private or public facing resources
* IP range for resources inside VPC
* allocate resources to subnets (group of resources based on security or 
operational needs)
* public subnet: 
  * publicly available
  * public internet gateway
* private subnet: 
  * privately available
  * virtual private gateway, approved access (VPN)
* AWS direct connect: direct and dedicated connection from a corporate data 
center to AWS cloud, not via public internet
* network access control list (ACL): Control access to VPC subnet
* instance network level security: Security groups (inbound, outbone)
* security group is stateful (has a memory), network ACL is stateless

Global networking:

* DNS: Domain name system (map websites to IP addresses)
* AWS DNS is called Amazon Route 53
* Domain names can be purchased in Route 53
* Traffic can be directed based on different policies (e.g. based on geolocation)
* Amazon cloud front: send requests to nearest edge location


## M5: Storage and databases

* Amazon EC2: Access to CPU, memory, network, storage
* Amazon EBS: Block-level storage (like a hard drive), files is broken down into 
blocks
* Types of hard-drives: 
  * Instance store: Temporary block-level storage (physically attached to host), 
  data is lost if instance is terminated
  * Amazon Elastic Block Storage (EBS): Persistent block-level storage 
  (physically separated from host)
  * Snapshots: Incremental backups of EBS volumes
* Amazon S3: Data store, data is stored as objects in buckets
* Objects contain data, metadata, key
* S3 static website hosting 
* Various S3 storage classes available:
  * S3 standard: frequent access, stored in at least 3 availability zones
  * S3 standard-infrequent access: stored in 3+ availability zones
  * S3 standard-one zone infrequent access: stored in 1 availability zones
  * S3 intelligent-tiering
  * S3 glacier instant retrieval
  * S3 glacier flexible retrieval
  * S3 glacier deep archive
  * data can migrate between storage type by a lifecycle policy

* Amazon Elastic File System: shared file system 
* multiple instances can access the data at the same time
* Amazon EBS are attached to single availability zones
* Amazon EFS is a regional service, i.e. multiple instances from different 
availability zone in the same region can R/W at the same time
  
* Relational databases store data in related tables using SQL
* Amazon Relational Database Service (RDS) runs databases in the AWS cloud
* automated hardware provisioning, database setup, patching, backups
* Amazon RDS is available on six engines: Amazon Aurora, PostgreSQL, MySQL, 
MariaDB, Oracle Database, Microsoft SQL Server
* lift-and-shift: migrate on-premise DB to AWS
* AWS Dynamo DB: serverless DB, non-relational (aka NoSQL) database, 
purpose built, millisecond response time, fully managed, highly scaleable
* Amazon Redshift: Data warehousing as a service, big data BI solutions
* Amazon Database Migration Service (DMS): homogeneous in case of same 
type of database for source and target, heterogeneous otherwise (the using
Amazon schema conversion tool)
* Other tools: Amazon DocumentDB, Amazon Neptune (graph database), 
Amazon Managed Blockchain, Amazon Quantum Ledger Database, database accelerators 
(e.g. Amazon ElastiCache. Amazon DynamoDB accelerator)


## M6: Security

* shared responsibility model (AWS, customer)
* AWS: security of the cloud
* customer: security in the cloud
* AWS Identity and Access Management (IAM), Users, groups, policies, roles
* AWS Organizations: centralized management of accounts, consolidated billing, 
hierarchical grouping of accounts, service control policies (SCP) can manage 
access to accounts or groups of accounts (organizational unit)
* AWS Artifacts: Access to security and compliance reports of various audits
* DDoS: Distributed denial-of-service attacks, attacker tries to overwhelm an 
application using other internet resources (bots, servers, ...). 
* AWS Shield can protect applications against DDoS 
* AWS Key Management Service (AWS KMS): encryption at rest, encryption in 
transit
* AWS web application firewall (WAF): Monitor network requests and block 
IP addresses known as being malicious
* Amazon Inspector: Automated security assessments 
* Amazon GuardDuty: Service to monitor network activity and detect threats 
intelligently


## M7: Monitoring and analyfics

* Amazon CloudWatch: metrics, thresholds, dashboards, alarms
* AWS CloudTrail: API auditing tools, every request gets logged
* AWS Trust Advisor: Advisor on cost optimization, performance, security, fault 
tolerance, service limits


## M8: Pricing and support

* AWS Free Tier
* AWS Pricing Concepts
* Billing Dashboard
* Consolidated billing per organization


